import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'java-library'

description = 'LWJGL3 SWT'

project.ext.lwjglVersion = "3.2.2"
project.ext.swtVersion = "3.109.0"

tasks.withType(JavaCompile) {
  	options.encoding = 'UTF-8'
}

task packageSources(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts.archives packageSources
repositories {
	mavenCentral()
	maven { url "http://repo.maven.apache.org/maven2" }
}

sourceSets.main.java.srcDirs "src"
switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		project.ext.swtNatives = "org.eclipse.swt.win32.win32.x86_64"
		sourceSets.main.java {
			exclude "**/PlatformLinux*.java", "**/PlatformMacOSX*.java"
		}
		sourceSets.test.java.srcDirs "test"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		project.ext.swtNatives = "org.eclipse.swt.gtk.linux.x86_64"
		sourceSets.main.java {
			exclude "**/PlatformWin32*.java", "**/PlatformMacOSX*.java"
		}
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		project.ext.swtNatives = "org.eclipse.swt.cocoa.macosx.x86_64"
		sourceSets.main.java {
			exclude "**/PlatformWin32*.java", "**/PlatformLinux*.java"
		}
		break
}

configurations.all {
	resolutionStrategy {
        dependencySubstitution {
            // The maven property ${osgi.platform} is not handled by Gradle
            // so we replace the dependency, using the osgi platform from the project settings
			def os = System.getProperty("os.name").toLowerCase()
			if (os.contains("windows")) {
	            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:3.108.0")
			}
			else if (os.contains("linux")) {
	            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:3.108.0")
			}
			else if (os.contains("mac")) {
	            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:3.108.0")
			}
        }
    }
}

dependencies {
	implementation "org.lwjgl:lwjgl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
	implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
	implementation "org.lwjgl:lwjgl-opengles:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengles:$lwjglVersion:$lwjglNatives"
	implementation "org.lwjgl:lwjgl-vulkan:$lwjglVersion"
	implementation "org.eclipse.platform:$swtNatives:$swtVersion"
}
